int $a;
for ($a = -11; $a < 11; $a = $a + 1)
{
    int $b;
    for ($b = -11; $b < 11; $b = $b + 1)
    {        
        polySphere;
        $nm = `ls -sl`;
        xform -scale 0.2 0.2 0.2;
        xform -translation ($a + 0.9 * rand(0, 1)) 0.2 ($b + 0.9 * rand(0, 1));
        
        $sel = rand(0, 1); 
        if ($sel < 0.8)
        {
            string $mat = `shadingNode -asShader customLambert`;
            setAttr ($mat + ".albedo") (rand(0, 1) * rand(0, 1)) (rand(0, 1) * rand(0, 1)) (rand(0, 1) * rand(0, 1));
            select $nm;
            hyperShade -assign $mat;
        }
        else if ($sel < 0.95)
        {
            string $mat = `shadingNode -asShader customMetal`;
            setAttr ($mat + ".albedo") (rand(0, 1) * rand(0, 1)) (rand(0, 1) * rand(0, 1)) (rand(0, 1) * rand(0, 1));
            setAttr ($mat + ".fuzz") (0.5 * rand(0, 1));
            select $nm;
            hyperShade -assign $mat;
        }
        else
        {
            string $mat = `shadingNode -asShader customDielectric`;
            setAttr ($mat + ".refraction") 1.5;
            select $nm;
            hyperShade -assign $mat;  
        }
    }
}

polySphere;
$nm = `ls -sl`;
xform -translation 4 1 0;
string $mat = `shadingNode -asShader customMetal`;
setAttr ($mat + ".albedo") 0.7 0.6 0.5;
setAttr ($mat + ".fuzz") 0;
select $nm;
hyperShade -assign $mat;

polySphere;
$nm = `ls -sl`;
xform -translation 0 1 0;
string $mat = `shadingNode -asShader customDielectric`;
setAttr ($mat + ".refraction") 1.3;
select $nm;
hyperShade -assign $mat;


polySphere;
$nm = `ls -sl`;
xform -translation -4 1 0;
string $mat = `shadingNode -asShader customLambert`;
setAttr ($mat + ".albedo") 0.4 0.2 0.1;
select $nm;
hyperShade -assign $mat;